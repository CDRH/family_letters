<div class="btn-group map-btn-group btn-group-justified" role="group" aria-label="...">
  <%= link_to "All Letters", research_map_path(id: "routes_all"), class: "btn btn-default" %>
  <%= link_to "Origin Cities", research_map_path(id: "city_from"), class: "btn btn-default" %>
  <%= link_to "Destination Cities", research_map_path(id: "city_to"), class: "btn btn-primary" %>
  <!-- <li><%# link_to "Photographs", research_map_path(id: "photographs") %></li> -->
</div>


<%= render "research/maps/setup" %>
<%# render "research/maps/#{id}" %>

<script>

  // ADD MAP
  var map = L.map('map', {
      center: new L.LatLng(36, -90),
      zoom: 4,
      layers: [osmLayer]
  });

  features = L.geoJSON(geojson, {
    onEachFeature: onEachFeature,
    pointToLayer: function(feature, latlng) {
      return L.circleMarker(latlng, markerOptions(feature));
    },
    style: function(feature) {
      color = degreeOfSpanish(feature.properties);
      return { color: color, weight: 3 }
    }
  });

  features.addTo(map);
  map.fitBounds(features.getBounds());

  function degreeOfSpanish(props) {
    // calculate percent in spanish
    es = Number(props.es) || 0;
    en = Number(props.en) || 0;

    perc_es = es/(es+en);

    color = "grey";
    if (perc_es >= .75) {
      color = "blue";
    } else if (perc_es <= .25) {
      color = "yellow"
    } else if (perc_es) {
      color = "green"
    }
    return color;
  }

  // BIND POPUP TO DESTINATION
  function onEachFeature(feature, layer) {
    props = feature.properties;
    lang = "<%= locale %>";
    console.log(JSON.stringify(props));
    title = props["location"]
    html = "<div class='mapFeature'>";
    html += "<strong>" + title + "</strong>";
    html += "<p>"+props["count"]+" outgoing letters</p>";
    html += "<ul>";
    if (props["letters"]) {
      props["letters"].forEach(function(letter) {
        if (lang == "es") {
          html += "<li>"+letter["title"]+"</li>";
        } else {
          html += "<li>"+letter["title_es"]+"</li>";
        }
      });
    }
    html += "</ul>";
    html += "</div>";
    layer.bindPopup(html);
  };

  // STYLE DESTINATION CIRCLES
  function markerOptions(feature) {
    props = feature.properties;
    count = props.count;
    // console.log(JSON.stringify(feature.properties));
    // one location has 81, the others much fewer
    // so using less than half the biggest to give
    // the others some size to work with
    percent = count/30;
    // scale up just a bit
    size = percent*15;
    // some simply too small to see / interact with
    if (size < 3) size = 4;
    // it's just too big!
    if (size > 30) size = 20;

    color = degreeOfSpanish(props)

    return {
      radius: size,
      color: "black",
      opacity: 1,
      weight: 0.2,
      fillColor: color,
      fillOpacity: 0.6
    }
  };

</script>
